CREATE DATABASE IF NOT EXISTS dbms_project;
USE dbms_project;

DROP TRIGGER IF EXISTS sub_quant;
DROP TRIGGER IF EXISTS add_quant;
DROP TRIGGER IF EXISTS transact_total;

SET FOREIGN_KEY_CHECKS = 0;
DROP TABLE IF EXISTS MEDICINE;
DROP TABLE IF EXISTS STORES;
DROP TABLE IF EXISTS DEALER;
DROP TABLE IF EXISTS RETAIL;
DROP TABLE IF EXISTS TRANSACTIONS;
DROP TABLE IF EXISTS PATIENT;
DROP TABLE IF EXISTS QUANT;
DROP TABLE IF EXISTS HOSPITAL;
DROP TABLE IF EXISTS TREATMENT;

DROP TABLE IF EXISTS CONTRACT;
DROP TABLE IF EXISTS DOCTOR;
SET FOREIGN_KEY_CHECKS = 1;


CREATE TABLE MEDICINE 
(
    med_id INT NOT NULL PRIMARY KEY ,
    name VARCHAR(25) NOT NULL,
    composition VARCHAR(70),
    mfg_date DATE NOT NULL,
    exp_date DATE NOT NULL,
    cost_per_tab INT,
    CHECK( exp_date <= "2030-01-01"),
    CHECK( mfg_date >= "2018-01-01")
);


CREATE TABLE STORES 
(
    store_id VARCHAR(20) NOT NULL PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    address VARCHAR(70),
    contact VARCHAR(25) NOT NULL,
    store_man VARCHAR(25) NOT NULL
);


CREATE TABLE DEALER 
(
    dealer_id INT NOT NULL PRIMARY KEY,
    name VARCHAR(25) NOT NULL,
    address VARCHAR(70),
    phone VARCHAR(25) NOT NULL
);


CREATE TABLE HOSPITAL
(
    hos_id VARCHAR(20) NOT NULL,
    name VARCHAR(25) NOT NULL,
    address VARCHAR(70),
    phone VARCHAR(25) NOT NULL,
    CONSTRAINT HOSPITAL_PK PRIMARY KEY(hos_id)
);


CREATE TABLE CONTRACT
(
    contract_id VARCHAR(20) NOT NULL,
    hos_id VARCHAR(20) NOT NULL,
    store_id VARCHAR(20) NOT NULL,
    CONSTRAINT CONTRACT_PK PRIMARY KEY(hos_id, store_id),
    CONSTRAINT CONTRACT_hos_id_FK FOREIGN KEY(hos_id) REFERENCES HOSPITAL(hos_id),
    CONSTRAINT CONTRACT_store_id_FK FOREIGN KEY(store_id) REFERENCES STORES(store_id)  
);


CREATE TABLE DOCTOR
(
    doc_id INT NOT NULL,
    hos_id VARCHAR(20) NOT NULL,
    doc_name VARCHAR(25) NOT NULL,
    CONSTRAINT DOCTOR_PK PRIMARY KEY(doc_id, hos_id),
    CONSTRAINT DOCTOR_hos_id_FK FOREIGN KEY(hos_id) REFERENCES HOSPITAL(hos_id)
);


CREATE TABLE RETAIL
(
    retail_id VARCHAR(20) NOT NULL,
    med_id INT NOT NULL,
    store_id VARCHAR(20) NOT NULL,
    dealer_id INT NOT NULL,
    batchno INT NOT NULL,
    quantity_supplied INT NOT NULL,
    CONSTRAINT RETAIL_PK PRIMARY KEY(retail_id, med_id,store_id,dealer_id),
    CHECK(quantity_supplied <= 500)
);


CREATE TABLE PATIENT 
(
    pat_id INT NOT NULL PRIMARY KEY,
    name VARCHAR(25) NOT NULL,
    address VARCHAR(70),
    phone VARCHAR(15) NOT NULL
);


CREATE TABLE TREATMENT
(
    treat_id INT NOT NULL UNIQUE,
    pat_id INT NOT NULL,
    hos_id VARCHAR(20) NOT NULL,
    doc_id INT NOT NULL,
    treat_date DATE NOT NULL,
    CONSTRAINT TREATEMENT_PK PRIMARY KEY(treat_id, pat_id, hos_id, doc_id),
    CONSTRAINT TREATEMENT_pat_id_FK FOREIGN KEY(pat_id) REFERENCES PATIENT(PAT_id),
    CONSTRAINT TREATEMENT_hos_id_FK FOREIGN KEY(hos_id) REFERENCES HOSPITAL(hos_id),
    CONSTRAINT TREATEMENT_doc_id_FK FOREIGN KEY(doc_id) REFERENCES DOCTOR(doc_id)
);


CREATE TABLE TRANSACTIONS
(
    bill_id INT NOT NULL,
    pat_id INT NOT NULL,
    store_id VARCHAR(20) NOT NULL,
    med_id INT NOT NULL,
    quantity INT NOT NULL,
    pur_date DATE NOT NULL,
    total INT ,
    CHECK(quantity <= 150),
    CHECK(pur_date < '2030-01-01' and pur_date > '2018-01-01'),
    CONSTRAINT TRANSACTIONS_PK PRIMARY KEY(bill_id,pat_id,med_id)
);

CREATE TABLE QUANT
(
    med_id INT ,
    store_id VARCHAR(20) ,
    quantity INT,
    CONSTRAINT QUANT_PK PRIMARY KEY(med_id,store_id)

);


ALTER TABLE RETAIL
ADD CONSTRAINT RETAIL_med_id_FK FOREIGN KEY(med_id) REFERENCES MEDICINE(med_id)
ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE RETAIL
ADD CONSTRAINT RETAIL_store_id_FK FOREIGN KEY(store_id) REFERENCES STORES(store_id) 
ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE RETAIL
ADD CONSTRAINT RETAIL_dealer_id_FK FOREIGN KEY(dealer_id) REFERENCES DEALER(dealer_id) 
ON DELETE CASCADE ON UPDATE CASCADE;


ALTER TABLE TRANSACTIONS
ADD CONSTRAINT TRANSACTIONS_pat_id_FK FOREIGN KEY(pat_id) REFERENCES PATIENT(pat_id)
ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TRANSACTIONS
ADD CONSTRAINT TRANSACTIONS_med_id_FK FOREIGN KEY(med_id) REFERENCES MEDICINE(med_id)
ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE TRANSACTIONS
ADD CONSTRAINT TRANSACTIONS_store_id_FK FOREIGN KEY(store_id) REFERENCES STORES(store_id) 
ON DELETE CASCADE ON UPDATE CASCADE;


ALTER TABLE QUANT
ADD CONSTRAINT QUANT_med_id_FK FOREIGN KEY(med_id) REFERENCES MEDICINE(med_id)
ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE QUANT
ADD CONSTRAINT QUANT_store_id_FK FOREIGN KEY(store_id) REFERENCES STORES(store_id)
ON DELETE CASCADE ON UPDATE CASCADE;


delimiter //
CREATE TRIGGER  add_quant
AFTER INSERT ON RETAIL
FOR EACH ROW
BEGIN
INSERT INTO QUANT(med_id, store_id, quantity)
VALUES(NEW.med_id, NEW.store_id, NEW.quantity_supplied)
ON DUPLICATE KEY UPDATE
quantity = quantity + NEW.quantity_supplied; 
END;
//


CREATE TRIGGER sub_quant 
AFTER INSERT ON TRANSACTIONS
FOR EACH ROW
BEGIN
UPDATE QUANT 
SET quantity = quantity - NEW.quantity
where med_id = NEW.med_id and store_id = NEW.store_id;
END;
//
delimiter ;

/*
Need to use stored procedure here, updating while inserting in the same table wont work with plain use of triggers.
CREATE TRIGGER transact_total
BEFORE UPDATE ON TRANSACTIONS
FOR EACH ROW
BEGIN
UPDATE TRANSACTIONS, MEDICINE
SET NEW.total = NEW.quantity * MEDICINE
delimiter ;
*/

